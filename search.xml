<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>logs_search</title>
    <url>/2019/11/19/logs-search/</url>
    <content><![CDATA[<p>在特定时间统计接口数</p><h2 id="日志统计"><a href="#日志统计" class="headerlink" title="日志统计"></a>日志统计</h2><p>代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">HOST_NAME=$(hostname)</span><br><span class="line">LOGS_DIR=<span class="string">'/home/phimor/apache-tomcat-7.0.73/logs/'</span></span><br><span class="line">LOG_FILE=<span class="string">"localhost_access*"</span></span><br><span class="line">INTERFACE_NAME=<span class="string">'getToken'</span></span><br><span class="line"></span><br><span class="line">START_TIME=<span class="string">'2018-12-28 10:00:00'</span></span><br><span class="line">END_TIME=<span class="string">'2018-12-28 10:10:00'</span></span><br><span class="line">start_time_seconds=$(date -d <span class="string">"<span class="variable">$&#123;START_TIME&#125;</span>"</span> +%s)</span><br><span class="line">end_time_seconds=$(date -d <span class="string">"<span class="variable">$&#123;END_TIME&#125;</span>"</span> +%s)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_seconds</span></span>()&#123;</span><br><span class="line">	seconds=$((<span class="variable">$&#123;end_time_seconds&#125;</span>-<span class="variable">$&#123;start_time_seconds&#125;</span>))</span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$&#123;seconds&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">count_gettoken_request_every_second</span></span>()&#123;</span><br><span class="line">	<span class="built_in">printf</span> <span class="string">"请求时间\t\t\t请求数\t\t接口名\t\t\n"</span></span><br><span class="line">	<span class="keyword">while</span> [[ <span class="variable">$&#123;start_time_seconds&#125;</span> -le <span class="variable">$&#123;end_time_seconds&#125;</span> ]]; <span class="keyword">do</span></span><br><span class="line">    		<span class="comment">#echo "output: $&#123;start_time_seconds&#125;"</span></span><br><span class="line">		<span class="comment">#current_time=$(date -d "@$&#123;start_time_sesconds&#125;" +"%F %H:%M:%S")</span></span><br><span class="line">		<span class="built_in">local</span> current_time=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;start_time_seconds&#125;</span>"</span> |awk <span class="string">'&#123;print strftime ("%F %T",$0)&#125;'</span>)</span><br><span class="line">		<span class="built_in">local</span> second=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;current_time: -1&#125;</span>"</span>)</span><br><span class="line">		<span class="built_in">local</span> search_time_regex=<span class="string">"<span class="variable">$&#123;current_time&#125;</span><span class="variable">$&#123;second&#125;</span>*"</span></span><br><span class="line">		<span class="comment">#echo $&#123;current_time&#125;</span></span><br><span class="line">		<span class="comment">#echo $&#123;second&#125;</span></span><br><span class="line">		<span class="comment">#echo $&#123;search_time_regex&#125;</span></span><br><span class="line">		<span class="built_in">local</span> gettoken_count=$(grep <span class="string">"<span class="variable">$&#123;search_time_regex&#125;</span>"</span> <span class="variable">$&#123;LOGS_DIR&#125;</span><span class="variable">$&#123;LOG_FILE&#125;</span> | grep <span class="variable">$&#123;INTERFACE_NAME&#125;</span> | wc -l)</span><br><span class="line">		<span class="built_in">echo</span> -e <span class="string">"<span class="variable">$&#123;current_time&#125;</span>\t\t<span class="variable">$&#123;gettoken_count&#125;</span>\t\tgetToken"</span></span><br><span class="line">   		<span class="literal">true</span> $(( start_time_seconds++ ))</span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count_gettoken_request_every_second &gt; <span class="variable">$&#123;HOST_NAME&#125;</span>.txt</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux_shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/04/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
